;define
STCP BIT P1.0
SHCP BIT P1.1
DS_  BIT P1.2
BUZZ BIT P1.3
L1  BIT P1.4
L2  BIT P1.5
L3  BIT P1.6
L4  BIT P1.7

KEY1 BIT P3.2
KEY2 BIT P3.3
;=======KHAI BAO CHO DS1307=========
;RTC DS1307
SCL BIT P3.0
SDA	BIT P3.1
;---------------------------
WIRTE	EQU		0D0H
READ	EQU		0D1H
;---------------------------
;_SEC	EQU		30H				;GIAY
_MIN	EQU		30H				;PHUT
_HOUR	EQU		31H				;GIO
;_DAY	EQU		33H				;THU
;_DATE	EQU 	34H				;NGAY
;_MONT	EQU		35H				;THANG
;_YEAR	EQU		36H				;NAM
_CONT	EQU		32H				;DIEU KHIEN
;-----------------------
TEMP	EQU		33H				;BYTE TAM
ADDR	EQU		34H				;DIA CHI BAT DAU DOC/GHI (TREN DS1307)
BYTES	EQU		35H				;SO BYTE SE DOC GHI LIEN TIEP
INDEX	EQU		36H				;DIA CHI BAT DAU DOC/GHI (TREN MCU)
;===============================
;======BIEN TIMER===============
TEM1 	DATA 	20H

T50MS  BIT  	TEM1.0
T250MS BIT  	TEM1.1
T500MS BIT  	TEM1.2
T1S	   BIT  	TEM1.3
T10S   BIT  	TEM1.4
T100MS BIT		TEM1.5
RELAY  BIT      TEM1.6
FLAG   BIT		TEM1.7
;----------------------------------
C100MS	EQU		37H
C250MS	EQU		38H
C500MS 	EQU		39H
C1S		EQU		3AH
C10S	EQU		3BH
;================================
;=========BIEN DISPLAY===========
HOUR    EQU     3CH
MINS	EQU     3DH

T_HOUR  EQU		3EH
T_MINS  EQU		3FH

X_HOUR  EQU		40H
X_MINS  EQU		41H

;================================
;==========BIEN DIEU KHIEN==========
TEM2	DATA 	21H
EN_M	BIT 	TEM2.0			;CHON PHUT
EN_H	BIT		TEM2.1			;CHON GIO
EN_COMP BIT		TEM2.2
EN_COMP2 BIT	TEM2.3
	
;=======BIEN CHUYEN DOI===========
BCD		EQU		42H
HEX		EQU		43H
;==================================	
;==========BIEN DIEU CHINH=========
MIN		EQU		44H
MAX		EQU		45H
;========BIEN DINH THOI============
COUT	EQU		25H
V_MIN	EQU		26H
V_HOR	EQU		27H
V_SOUND EQU		28H
TEMR	EQU		29H
VALUE	EQU		2AH
COMPX	EQU		2BH
TIME	EQU		46H
;==================================

ORG 	0000H
JMP		BEGIN
ORG		001BH
MOV TH1,#HIGH(-50000)
MOV TL1,#LOW (-50000)
CLR TF1
SETB T50MS
RETI
;====================KHOI TAO=======================
BEGIN:
CALL DELAY10MS
MOV IE,#88H				;CHO PHEP NGAT DO BO DINH THOI 1
MOV TMOD,#10H			; TIMER 1 CHE DO 16BIT
SETB TF1
SETB TR1

MOV TEM1,#255
MOV TEM2,#255

MOV C100MS,#2
MOV C250MS,#5
MOV C500MS,#10
MOV C1S,#20
MOV C10S,#200

SETB SDA
SETB SCL
CLR DS_
CLR STCP
CLR SHCP
CALL DELAY10MS

CLR RELAY
SETB EN_M
SETB EN_H
CLR EN_COMP2
SETB EN_COMP
CALL CON1S
CALL READ_DATA
;============CHUONG TRINH CHINH===================
MAIN:
		CALL KEY_CONT
		CALL GIVE_TIME
		CALL TIMING
		CALL DISPLAY
		JMP MAIN

ALL_PRO:
		CALL GIVE_TIME
		CALL TIMING
		CALL DISPLAY
		RET

;===========KEY CONTROL==========================
KEY_CONT:
		JNB KEY1,W1
		JNB KEY2,X1
		JMP EX_KEY_CONT
X1:
		MOV C500MS,#100
		CLR T500MS
CHK_X1:		
		CALL ALL_PRO
		JNB KEY2,CHK_X11
		JMP CLICK_X1
CHK_X11:		
		JNB T500MS,CHK_X1
		JMP KEEP_X1	
CLICK_X1:
		CLR BUZZ
		CALL READ_DATA
CLICK_X11:
		CALL ALL_PRO
		JNB KEY2,CLICK_X11
		SETB BUZZ
		JMP EX_KEY_CONT
	
KEEP_X1:
		CALL DEFAUL
		CALL WIRTE_DATA
		CLR BUZZ
KEEP_X11:		
		CALL ALL_PRO
		JNB KEY2,KEEP_X11
		SETB BUZZ
		JMP EX_KEY_CONT
W1:
		MOV C500MS,#10
		CLR T500MS
CHK_W1:		
		CALL DISPLAY
		CALL TIMING
		JNB KEY1,CHK_W11
		JMP CLICK_W1
CHK_W11:		
		JNB T500MS,CHK_W1
		JMP KEEP_W1	
CLICK_W1:
		MOV T_MINS,MINS
		MOV T_HOUR,HOUR
		CLR EN_M
		SETB EN_H
		MOV C10S,#250
		CLR T10S
CLICK_W11:
		CALL M_PRO
		JNB KEY1,W2
		JNB KEY2,W3
		JNB T10S,CLICK_W11
		JMP W5	
W3:
		MOV C10S,#250
		CLR T10S		
		MOV MIN,#0
		MOV MAX,#60
		CALL INC_MIN
		JMP CLICK_W11	
W2:	
		CALL M_PRO
		JNB KEY1,W2
		SETB EN_M
		CLR EN_H
		MOV C10S,#250
		CLR T10S
CLICK_W22:
		CALL M_PRO
		JNB KEY1,W5
		JNB KEY2,W4
		JNB T10S,CLICK_W22
		JMP W5
W5:
		CALL M_PRO
		
		JNB KEY1,W5
		CALL UP_DATA
		JMP EX_KEY_CONT	
W4:
		MOV C10S,#250
		CLR T10S		
		MOV MIN,#0
		MOV MAX,#24
		CALL INC_HOR
		JMP CLICK_W22
;=============CAI DAT THOI GIAN===================		
KEEP_W1:
		CALL M_PRO
		CLR BUZZ
		JNB KEY1,KEEP_W1
		CALL READ_DATA
		SETB BUZZ		
		CALL CON4K
		MOV V_MIN,#TIME
		MOV V_HOR,#TIME+1
		MOV V_SOUND,#TIME+2
		MOV COUT,#1
		CLR FLAG
L_INPUT:
		CALL DISP_AL
		JB FLAG,EXX_11
		CALL DOWN_TIME
		SETB EN_H
		CLR EN_M
		MOV C1S,#250
		CLR T1S
KEEP_W11:
		CALL M_PRO
		JNB KEY1,KEEP_W2
		JNB KEY2,INC_SLOT1
		JNB T1S,KEEP_W11
		CALL UP_TIME
		JMP EXX_INPUT	
INC_SLOT1:
		MOV C1S,#250
		CLR T1S
		MOV MAX,#60
		MOV MIN,#0
		CALL INC_MIN
		JMP KEEP_W11
EXX_11:
		JMP EXX_INPUT	
KEEP_W2:
		CALL M_PRO
		JNB KEY1,KEEP_W2
		SETB EN_M
		CLR EN_H
		MOV C1S,#250
		CLR T1S	
KEEP_W22:
		CALL M_PRO
		JNB KEY1,KEEP_W3
		JNB KEY2,INC_SLOT11
		JNB T1S,KEEP_W22
		CALL UP_TIME
		JMP EXX_INPUT
INC_SLOT11:	
		MOV C1S,#250
		CLR T1S	
		MOV MAX,#24
		MOV MIN,#0
		CALL INC_HOR
		JMP KEEP_W22
KEEP_W3:		
		CALL M_PRO
		JNB KEY1,KEEP_W3
		CALL UP_TIME
		CALL DOWN_BUZZ
		MOV T_HOUR,#0EFH
		SETB EN_H
		CLR EN_M
		MOV C1S,#60
		CLR T1S
KEEP_W33:		
		CALL M_PRO
		JNB KEY1,KEEP_W4
		JNB KEY2,INC_SLOT111
		JNB T1S,KEEP_W33
		MOV TEMR,T_MINS
		SETB EN_M
		MOV C250MS,#200
		SETB T250MS
		CALL SELECT_T
		MOV VALUE,#20
		CALL NOTT
		MOV C1S,#200
		CLR T1S
		MOV C250MS,#5
		CLR EN_M
		JMP KEEP_W33
INC_SLOT111:
		MOV C1S,#60
		CLR T1S		
		MOV MAX,#15
		MOV MIN,#0
		CALL INC_MIN
		JMP KEEP_W33
KEEP_W4:		
		SETB EN_M
		SETB EN_H
		CALL UP_BUZZ
		CALL LOAD_TIME
		CALL INC_VAR
		MOV A,COUT
		CJNE A,#18,LL_INPUT
EXX_INPUT:
		CALL CON1S
		CALL WIRTE_DATA
		CALL LOAD_TIME
		CLR BUZZ
L_EXX:	
		CALL TIMING
		CALL DISPLAY
		JNB KEY1,L_EXX
		SETB BUZZ
		JMP EX_KEY_CONT
LL_INPUT:		
		JMP L_INPUT	
EX_KEY_CONT:
		RET
;============GHI DU LIEU VAO DS============
WIRTE_DATA:
		CALL DELAY10MS
		MOV BYTES,#54
		MOV ADDR,#08H
		MOV INDEX,#TIME
		CALL MASTER_W
		RET
;============DOC DU LIEU TU DS============		
		
READ_DATA:
		CALL DELAY10MS
		MOV BYTES,#54
		MOV ADDR,#08H
		MOV INDEX,#TIME
		CALL MASTER_R
		RET

;=========HIEN THI THU TU===============		
DISP_AL:
		CALL DIS_ALL
L_DISP_AL1:
		MOV C1S,#30
		CLR T1S
		CLR BUZZ
		CALL M_PRO
		JNB KEY1,L_DISP_AL1
		JNB KEY2,L_DISP_AL1
L_DISP_AL:
		SETB BUZZ
		JNB KEY1,WX1
		JNB KEY2,WX2
		CALL M_PRO
		JNB T1S,L_DISP_AL
		JMP EX_DISP_AL
WX1:
		CALL INC_VAR
		CALL DIS_ALL
WX11:
		JNB KEY2,EX_SETTING
		MOV C1S,#60
		CLR T1S
		CALL M_PRO
		CLR BUZZ
		JNB KEY1,WX11
		JMP L_DISP_AL
EX_SETTING:
		CLR EN_H
		CLR EN_M
		CALL LOAD_TIME
		MOV T_MINS,_MIN
		MOV T_HOUR,_HOUR
EX_SETTING2:
		CALL M_PRO
		CLR BUZZ
		JNB KEY1,EX_SETTING2
		JNB KEY2,EX_SETTING2
		SETB BUZZ
		SETB FLAG
		SETB EN_H
		SETB EN_M
		JMP EX_DISP_AL
WX2:
		CALL DEC_VAR
		CALL DIS_ALL			
WX22:			
		MOV C1S,#60
		CLR T1S
		CALL M_PRO
		CLR BUZZ
		JNB KEY2,WX22
		JMP L_DISP_AL	
EX_DISP_AL:		
		RET
DIS_ALL:
		MOV A,COUT
		CALL HEX2BCD
		MOV T_MINS,A
		MOV T_HOUR,#0BCH
		SETB EN_M
		SETB EN_H
		RET			
;==========LOAD DEFAUL================
DEFAUL:
		MOV DPTR,#TIMER
		MOV R0,#TIME
L_DEFAUL:
		MOV A,#0
		MOVC A,@A+DPTR
		MOV @R0,A
		INC DPTR
		INC R0
		CJNE R0,#TIME+55,L_DEFAUL
		RET
;======LAY THOI GIAN HEN GIO==========		
DOWN_TIME:
		MOV R0,V_MIN
		MOV R1,V_HOR
		MOV A,@R0
		MOV T_MINS,A
		MOV A,@R1
		MOV T_HOUR,A
		RET	
UP_TIME:
		MOV R0,V_MIN
		MOV R1,V_HOR
		MOV @R0,T_MINS
		MOV @R1,T_HOUR
		RET	
DOWN_BUZZ:
		MOV R0,V_SOUND
		MOV A,@R0
		MOV T_MINS,A
		RET
UP_BUZZ:
		MOV R0,V_SOUND
		MOV @R0,T_MINS
		RET	
		
;==========TANG GIAM SLOT===============		
INC_VAR:
		INC COUT
		MOV A,COUT
		CJNE A,#19,L_INC_VAR1
		MOV COUT,#18
		JMP EX_INC_VAR
L_INC_VAR1:				
		MOV R0,#3
L_INC_VAR:
		INC V_MIN
		INC V_HOR
		INC V_SOUND
		DJNZ R0,L_INC_VAR
EX_INC_VAR:		
		RET
;-------------------------		
DEC_VAR:
		DEC COUT
		MOV A,COUT
		CJNE A,#0,L_DEC_VAR1
		MOV COUT,#1
		JMP EX_DEC_VAR
L_DEC_VAR1:		
		MOV R0,#3
L_DEC_VAR:
		DEC V_MIN
		DEC V_HOR
		DEC V_SOUND
		DJNZ R0,L_DEC_VAR
EX_DEC_VAR:		
		RET			
;=======CAP NHAT DU LIEU=============
UP_DATA:
		MOV MINS,T_MINS
		MOV HOUR,T_HOUR					
		CALL DELAY10MS
		MOV _CONT,#0
		MOV BYTES,#01H
		MOV ADDR,#00H
		MOV INDEX,#_CONT
		CALL MASTER_W
		CALL DELAY10MS
		MOV BYTES,#01H
		MOV ADDR,#01H
		MOV INDEX,#T_MINS
		CALL MASTER_W
		CALL DELAY10MS
		MOV BYTES,#01H
		MOV ADDR,#02H
		MOV INDEX,#T_HOUR
		CALL MASTER_W
		CALL CON1S
		SETB EN_M
		SETB EN_H
		RET		
;================TANG GIO=============	
			
INC_HOR:
		CALL INC_H
		
		MOV C500MS,#10
		CLR T500MS
__CHK0_WH:		
		CALL M_PRO
		JNB KEY2,__CHK1_WH
		
		JMP __L2_WH
__CHK1_WH:		
		JNB T500MS,__CHK0_WH
		SETB EN_H
		SETB EN_M
__L1_WH:	
		CALL M_PRO
		JNB T100MS,__L1_WH
		CLR T100MS
		MOV C1S,#60
		CLR T1S
		CALL INC_H
		JNB KEY2,__L1_WH
__L2_WH:	
		CLR EN_H
		SETB EN_M
		RET
INC_H:
		MOV BCD,T_HOUR
		CALL BCD2HEX
		MOV T_HOUR,HEX
		INC T_HOUR
		MOV A,T_HOUR
		CJNE A,MAX,CONT_INC_H
		MOV T_HOUR,MIN
CONT_INC_H:
		MOV A,T_HOUR
		CALL HEX2BCD
		MOV T_HOUR,A
		RET
					
;==========TANG PHUT=============
INC_MIN:
		CALL INC_M
		
		MOV C500MS,#10
		CLR T500MS
__CHK0_WM:		
		CALL M_PRO
		JNB KEY2,__CHK1_WM
		
		JMP __L2_WM
__CHK1_WM:		
		JNB T500MS,__CHK0_WM
		SETB EN_H
		SETB EN_M
__L1_WM:	
		CALL M_PRO
		JNB T100MS,__L1_WM
		CLR T100MS
		MOV C1S,#60
		CLR T1S
		CALL INC_M
		JNB KEY2,__L1_WM
__L2_WM:	
		SETB EN_H
		CLR EN_M
		RET
INC_M:
		MOV BCD,T_MINS
		CALL BCD2HEX
		MOV T_MINS,HEX
		INC T_MINS
		MOV A,T_MINS
		CJNE A,MAX,CONT_INC_M
		MOV T_MINS,MIN
CONT_INC_M:
		MOV A,T_MINS
		CALL HEX2BCD
		MOV T_MINS,A
		RET
;=========CAC CHUONG TRINH CON CHINH==============
M_PRO:
		CALL ENABLE
		CALL TIMING
		CALL DISPLAY
			RET
;==========CAU HINH DS1307========================
CON1S:

		CALL DELAY10MS
		MOV _CONT,#10010000B
		MOV BYTES,#01H
		MOV ADDR,#07H
		MOV INDEX,#_CONT
		CALL MASTER_W
		RET
CON4K:
		CALL DELAY10MS
		MOV _CONT,#10010001B
		MOV BYTES,#01H
		MOV ADDR,#07H
		MOV INDEX,#_CONT
		CALL MASTER_W
		RET
;===============CHU KY LAY THOI GIAN LA 10S=========
GIVE_TIME:
		JNB T10S,EX_GIVE_TIME
		CLR T10S
		CALL LOAD_TIME
		JNB EN_COMP,EX_GIVE_TIME
		CALL COMPARE
EX_GIVE_TIME:
		CALL EN_COMPARE				
		RET
;================SO SANH GIO=====================
COMPARE:
		PUSH 03H
		MOV R0,#TIME
		MOV R1,#TIME+1
		MOV R3,#18
L_COMPARE:	
		MOV A,@R0
		CJNE A,_MIN,CONT1_COMPARE
		MOV A,@R1
		MOV COMPX,A
		CJNE A,_HOUR,CONT1_COMPARE
		INC R1
		MOV A,@R1
		MOV TEMR,A
		MOV A,@R0
		MOV COMPX,A
		SETB EN_COMP2
		CLR EN_M
		CLR EN_H
		CALL SELECT_T
		CLR EN_M
		CLR EN_H
		CALL LOAD_TIME
		JMP EX_COMPARE
CONT1_COMPARE:		
		MOV R2,#3
L1_COMPARE:		
		INC R0
		INC R1
		DJNZ R2,L1_COMPARE
		DJNZ R3,L_COMPARE	
EX_COMPARE:
		POP 03H
		RET
;------------QUA 1 PHUT MOI DC KT TIEP---------------
EN_COMPARE:
		JNB EN_COMP2,EX_EN_COMP
		MOV A,COMPX
		CJNE A,_MIN,EX1_EN_COMP
		CLR EN_COMP
		JMP	EX_EN_COMP
EX1_EN_COMP:
		CLR EN_COMP2
		SETB EN_COMP
EX_EN_COMP:
		RET
;==============LAY THOI GIAN TRONG DS1307===========
LOAD_TIME:
		MOV BYTES,#02H
		MOV ADDR,#01H
		MOV INDEX,#_MIN
		CALL MASTER_R
		MOV A,_HOUR
		ANL A,#00111111B
		MOV _HOUR,A
		MOV MINS,_MIN
		MOV HOUR,_HOUR
		MOV T_MINS,_MIN
		MOV T_HOUR,_HOUR
		RET
;=============SELECTION===========================
ENABLE:
		MOV X_HOUR,T_HOUR
		MOV X_MINS,T_MINS
		
		JNB EN_M,DIS_M
EX_M1:
		MOV MINS,X_MINS
		JMP EX_M
DIS_M:
		JNB T250MS,EX_M1
		MOV MINS,#0AAH
EX_M:
		JNB EN_H,DIS_H
EX_H1:
		MOV HOUR,X_HOUR
		JMP EX_H
DIS_H:
		JNB T250MS,EX_H1
		MOV HOUR,#0AAH
EX_H:
		RET
;================HIEN THI=========================
DISPLAY:
		MOV A,MINS
		ANL A,#0FH
		CALL DECODE
		CALL OUT_B
		CLR L1
		SETB L2
		SETB L3
		SETB L4
		CALL DELAY10MS
		SETB L1
		MOV A,MINS
		ANL A,#0F0H
		SWAP A
		CALL DECODE
		CALL OUT_B
		SETB L1
		CLR L2
		SETB L3
		SETB L4
		CALL DELAY10MS
		SETB L2
		MOV A,HOUR
		ANL A,#0FH
		CALL DECODE
		CALL OUT_B
		SETB L1
		SETB L2
		CLR L3
		SETB L4
		CALL DELAY10MS
		SETB L3
		MOV A,HOUR
		ANL A,#0F0H
		SWAP A
		CALL DECODE
		CALL OUT_B
		SETB L1
		SETB L2
		SETB L3
		CLR L4
		CALL DELAY10MS
		SETB L4
		RET
;=============XUAT DU LIEU RA LED 7 DOAN==================	
OUT_B:
 		PUSH 07H
		MOV C,RELAY
		MOV ACC.7,C
		MOV R7,#8
L_OUT_B:
		RLC A
		MOV DS_,C
		SETB SHCP
		CLR SHCP
		DJNZ R7,L_OUT_B
		SETB STCP
		CLR STCP
		POP 07H
		RET
;==============DECODE========================
DECODE:
		MOV DPTR,#TABLE
		MOVC A,@A+DPTR
		RET
;----------------------------------------------------------		
;DOC DU LIEU TU DS1307 VOI CAC THAM SO: BYTES(SO BYTES DUOC DOC LIEN TIEP),INDEX(DIA CHI DICH 8051),ADDR(DIA CHI NGUON DS1307 )	
MASTER_R:
		PUSH 00H
		PUSH 07H
		CALL SELECT_ADDR
		CALL CON_S
		MOV TEMP,#READ
		CALL __BYTE_WIRTE	
		MOV R7,BYTES
		MOV R0,INDEX
__LOOP4:
		CALL ACK
		CALL __BYTE_READ
		MOV @R0,TEMP
		INC R0
		DJNZ R7,__LOOP4
		CALL N_ACK
		CALL CON_P
		POP 07H
		POP 00H
		RET
;GHI DU LIEU LEN DS1307 VOI CAC THAM SO: BYTES(SO BYTES DUOC GHI LIEN TIEP),INDEX(DIA CHI DU LIEU NGUON 8051),ADDR(DIA CHI DICH DS1307)
MASTER_W:
		PUSH 07H
		PUSH 00H
		CALL CON_S
		MOV TEMP,#WIRTE
		CALL __BYTE_WIRTE
		CALL ACK
		MOV TEMP,ADDR
		CALL __BYTE_WIRTE
		CALL ACK
		MOV R7,BYTES
		MOV R0,INDEX
LOOP3__:
		MOV A,@R0
		INC R0
		MOV TEMP,A
		CALL __BYTE_WIRTE
		CALL ACK
		DJNZ R7,LOOP3__
		CALL CON_P
		POP 00H
		POP 07H
		RET
;DINH CON TRO DU LIEU QUA ADDR		
SELECT_ADDR:
		CALL CON_S
		MOV TEMP,#WIRTE
		CALL __BYTE_WIRTE
		CALL ACK
		MOV TEMP,ADDR
		CALL __BYTE_WIRTE
		CALL ACK
		CALL CON_P
		RET
;PHAT 1BYTE DU LIEU TRONG TEMP

__BYTE_WIRTE:
		PUSH 07H
		MOV A,TEMP
		MOV R7,#8
LOOP1__:
		RLC A
		MOV SDA,C
		SETB SCL
		CALL DELAYP
		CLR SCL
		DJNZ R7,LOOP1__
		POP 07H
		RET
; NHAN 1 BYTE DU LIEU CAT VAO TEMP
__BYTE_READ:
		PUSH 07H
		MOV R7,#8
LOOP2__:	
		SETB SCL
		MOV C,SDA
		CALL DELAYP
		CLR SCL
		RLC A
		DJNZ R7,LOOP2__
		MOV TEMP,A
		POP 07H
		RET
; DIEU KIEN START
CON_S:
		SETB SDA
		SETB SCL
		CALL DELAYN
		CLR SDA
		CALL DELAYN
		CLR SCL
		RET
;DIEU KIEN STOP
CON_P:
		CLR SDA
		CLR SCL
		CALL DELAYN
		SETB SCL
		CALL DELAYN
		SETB SDA
		RET
;BAO DA NHAN/PHAT 1 BYTE
ACK:
		CLR SCL
		CLR SDA
		CALL DELAYP
		SETB SCL
		CALL DELAYP
		CLR SCL
		SETB SDA
		CALL DELAYP
		RET
;DAO CUA ACK
N_ACK:
		CLR SCL
		SETB SDA
		CALL DELAYP
		SETB SCL
		CALL DELAYP
		RET
;SHORT DELAY
DELAYP:
		NOP
		NOP
		RET
DELAYN:
		CALL DELAYP
		CALL DELAYP
		RET		
;--------------------------------------------		
;============CAC TIMER======================
TIMING:
		JNB T50MS,EX_TIMING
		CLR T50MS
		
		DJNZ C100MS,EX_100MS
		CPL T100MS
		MOV C100MS,#2
EX_100MS:
		DJNZ C250MS,EX_250MS
		CPL T250MS
		MOV C250MS,#5
EX_250MS:
		DJNZ C500MS,EX_500MS
		CPL T500MS
		MOV C500MS,#10
EX_500MS:		
		DJNZ C1S,EX_1S
		CPL T1S
		MOV C1S,#20
EX_1S:
		DJNZ C10S,EX_TIMING
		CPL T10S
		MOV C10S,#200
EX_TIMING:
		RET
		
;=============DELAY10MS================
DELAY10MS:
		PUSH 07H
		PUSH 06H
		MOV R7,#10
L_DELAY10MS:
		MOV R6,#200
		DJNZ R6,$
		DJNZ R7,L_DELAY10MS
		POP 06H
		POP 07H
		RET
;-----------------------------------------------
;-----------FUNCTION HEX TO BCD-------------
;NAP SO HEX VAO A KET QUA BCD LAY RA TU A
HEX2BCD:
		MOV B,#10
		DIV AB
		SWAP A
		ORL A,B
			RET
;----------FUNCTION BCD TO HEX--------------
;nap so bcd vao BCD ket qua tra ve HEX			
BCD2HEX:
		MOV A,BCD
		SWAP A
		ANL A,#00001111B
		CJNE A,#0,CONT_BCD2HEX
		MOV HEX,BCD
		JMP EX_BCD2HEX
CONT_BCD2HEX:
		MOV A,BCD
CONT3_BCD2HEX:		
		CLR C
		SUBB A,#6
		MOV HEX,A
		MOV B,#10
		DIV AB
		SWAP A
		ORL A,B
		CJNE A,BCD,CONT2_BCD2HEX
		JMP EX_BCD2HEX		
CONT2_BCD2HEX:
		MOV A,HEX
		JMP CONT3_BCD2HEX		
EX_BCD2HEX:
		RET
;==========Tone=====================
SELECT_T:
		MOV A,TEMR
		CJNE A,#00H,CON1_SLE	
		CALL TONE_0
		JMP EX_SELECT_T
CON1_SLE:
		CJNE A,#01H,CON2_SLE	
		CALL TONE_1
		JMP EX_SELECT_T
CON2_SLE:
		CJNE A,#02H,CON3_SLE	
		CALL TONE_2
		JMP EX_SELECT_T
CON3_SLE:
		CJNE A,#03H,CON4_SLE	
		CALL TONE_3
		JMP EX_SELECT_T
CON4_SLE:
		CJNE A,#04H,CON5_SLE	
		CALL TONE_4
		JMP EX_SELECT_T
CON5_SLE:
		CJNE A,#05H,CON6_SLE	
		CALL TONE_5
		JMP EX_SELECT_T
CON6_SLE:
		CJNE A,#06H,CON7_SLE	
		CALL TONE_6
		JMP EX_SELECT_T
CON7_SLE:
		CJNE A,#07H,CON8_SLE	
		CALL TONE_7
		JMP EX_SELECT_T
CON8_SLE:
		CJNE A,#08H,CON9_SLE	
		CALL TONE_8
		JMP EX_SELECT_T
CON9_SLE:
		CJNE A,#09H,CON10_SLE	
		CALL TONE_9
		JMP EX_SELECT_T
CON10_SLE:
		CJNE A,#10H,CON11_SLE	
		CALL TONE_10
		JMP EX_SELECT_T
CON11_SLE:
		CJNE A,#11H,CON12_SLE	
		CALL TONE_11
		JMP EX_SELECT_T
CON12_SLE:
		CJNE A,#12H,CON13_SLE	
		CALL TONE_12
		JMP EX_SELECT_T
CON13_SLE:
		CJNE A,#13H,CON14_SLE	
		CALL TONE_13
		JMP EX_SELECT_T
CON14_SLE:
		CJNE A,#14H,CON15_SLE	
		CALL TONE_14
		JMP EX_SELECT_T
CON15_SLE:
		CJNE A,#15H,CON16_SLE	
;		CALL TONE_15
		JMP EX_SELECT_T
CON16_SLE:
		CJNE A,#16H,EX_SELECT_T	
;		CALL TONE_16
EX_SELECT_T:
		RET
;===========KHO TONE=============
TONE_0:
		NOP
		RET
TONE_1:
		SETB EN_M
		SETB RELAY
		MOV VALUE,#20
		CALL NOTT
		RET
TONE_2:
		CLR EN_M
		CLR RELAY
		MOV VALUE,#20
		CALL NOTT
		RET
TONE_3:
		JNB RELAY,CONT_TONE_3
		CLR EN_M
		JMP EX_TONE_3
CONT_TONE_3:
		SETB EN_M
EX_TONE_3:		
		CPL RELAY
		MOV VALUE,#20
		CALL NOTT
		RET
TONE_4:
		SETB EN_M
		SETB RELAY
		MOV VALUE,#20
		CALL NOTT
		CLR RELAY
		CLR EN_M
		RET
TONE_5:
		SETB EN_M
		SETB RELAY
		MOV VALUE,#40
		CALL NOTT
		CLR RELAY
		CLR EN_M
		RET
TONE_6:
		SETB EN_M
		SETB RELAY
		MOV VALUE,#80
		CALL NOTT
		CLR RELAY
		CLR EN_M
		RET		
TONE_7:
		SETB EN_M
		SETB RELAY
		MOV VALUE,#40
		CALL NOTT
		CLR EN_M
		CLR RELAY
		MOV VALUE,#10
		CALL NOTT
		SETB EN_M
		SETB RELAY
		MOV VALUE,#40
		CALL NOTT
		CLR RELAY
		CLR EN_M
		RET	
TONE_8:
		SETB EN_M
		SETB RELAY
		MOV VALUE,#20
		CALL NOTT
		CLR EN_M
		CLR RELAY
		MOV VALUE,#10
		CALL NOTT
		SETB EN_M
		SETB RELAY
		MOV VALUE,#20
		CALL NOTT
		CLR EN_M
		CLR RELAY
		MOV VALUE,#10
		CALL NOTT
		SETB EN_M
		SETB RELAY
		MOV VALUE,#60
		CALL NOTT
		CLR EN_M
		CLR RELAY
		RET
TONE_9:
		CLR BUZZ
		RET
TONE_10:
		CLR BUZZ
		MOV VALUE,#20
		CALL NOTT
		SETB BUZZ
		RET
TONE_11:
		CLR BUZZ
		MOV VALUE,#40
		CALL NOTT
		SETB BUZZ
		RET

TONE_12:
		CLR BUZZ
		MOV VALUE,#80
		CALL NOTT
		SETB BUZZ
		RET
TONE_13:
		MOV R4,#10
RE_TONE_13:
		CLR BUZZ
		MOV VALUE,#10
		CALL NOTT
		SETB BUZZ
		MOV VALUE,#5
		CALL NOTT
		DJNZ R4,RE_TONE_13
		RET
TONE_14:
		MOV R4,#10
RE_TONE_14:
		CLR BUZZ
		MOV VALUE,#10
		CALL NOTT
		SETB BUZZ
		MOV VALUE,#10
		CALL NOTT
		DJNZ R4,RE_TONE_14
		RET
NOTT:
		CLR T1S
		MOV C1S,VALUE
L1_NOTT:
		CALL M_PRO
		JNB T1S,L1_NOTT
		RET
		
TABLE:
	db 0C0h;0
	db 0F9h;1
	db 0A4h;2
	db 0B0h;3
	db 099h;4
	db 092h;5
	db 082h;6
	db 0F8h;7
	db 080h;8
	db 090h;9
	db 0FFH;[space] -A
	db 088h;A		-B
	db 0C7h;L		-C
	db 0BFh;-		-D
	db 0C6h;[		-E
	db 0F0h;]		-F
TIMER:
;alamp 1
	DB	00H
	DB	00H
	DB	0
;alamp 2
	DB	00H
	DB	00H
	DB	0
;alamp 3	
	DB	00H
	DB	00H
	DB	0
;alamp 4	
	DB	00H
	DB	00H
	DB	0
;alamp 5	
	DB	00H
	DB	00H
	DB	0
;alamp 6	
	DB	00H
	DB	00H
	DB	0
;alamp 7	
	DB	00H
	DB	00H
	DB	6
;alamp 8	
	DB	00H
	DB	00H
	DB	0
;alamp 9	
	DB	00H
	DB	00H
	DB	0
;alamp 10	
	DB	00H
	DB	00H
	DB	0
;alamp 11	
	DB	00H
	DB	00H
	DB	0
;alamp 12	
	DB	00H
	DB	00H
	DB	0
;alamp 13	
	
	DB	00H
	DB	00H
	DB	0
;alamp 14	
	DB	00H
	DB	00H
	DB	4
;alamp 15	
	DB	00H
	DB	00H
	DB	0
;alamp 16	
	DB	00H
	DB	00H
	DB	0
;alamp 17	
	DB	00H
	DB	00H
	DB	0
;alamp 18	
	DB	00H
	DB	00H
	DB	0	
END